---
name: Test Bot (fresh research + fresh GTMC1 actors)

on:
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  forecast_job:
    runs-on: ubuntu-latest

    # Make secrets/flags available to ALL steps
    env:
      # ---- Required / identity ----
      GIT_SHA: ${{ github.sha }}
      METACULUS_TOKEN: ${{ secrets.METACULUS_TOKEN }}

      # ---- LLM providers ----
      USE_OPENROUTER: "1"
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
      OPENROUTER_BASE_URL: https://openrouter.ai/api/v1
      OPENROUTER_FALLBACK_ID: openai/gpt-4o
      OPENROUTER_GPT5_ID: openai/gpt-4o
      OPENROUTER_GPT5_THINK_ID: openai/gpt-4o
      OPENROUTER_CLAUDE37_ID: anthropic/claude-3.7-sonnet
      OR_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}

      USE_GOOGLE: "1"
      GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      GEMINI_MODEL: gemini-2.5-pro
      GEMINI_MODEL_ID: gemini-2.5-pro

      ENABLE_GROK: "1"
      XAI_API_KEY: ${{ secrets.XAI_API_KEY }}
      XAI_BASE_URL: https://api.x.ai/v1/chat/completions
      XAI_GROK_ID: grok-4
      GROK_MODEL_ID: grok-4

      # ---- Optional providers ----
      PERPLEXITY_API_KEY: ${{ secrets.PERPLEXITY_API_KEY }}
      EXA_API_KEY: ${{ secrets.EXA_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      # ---- Behavior for fresh tests ----
      SUBMIT_PREDICTION: "0"
      TOURNAMENT_ID: fall-aib-2025
      TEST_POST_IDS: "578,14333,22427,38195"

      # Force fresh research: 1 = disable cache
      PYTHIA_DISABLE_RESEARCH_CACHE: "1"
      PYTHIA_DISABLE_CLASSIFIER_CACHE: "0"

      # Knobs
      RESEARCH_TEMP: "0.10"
      RESEARCH_TOP_P: "0.90"
      FORECAST_TEMP: "0.00"
      FORECAST_TOP_P: "0.10"
      MIN_ANCHOR_MATCH: "2"
      SALVAGE_MIN_MATCH: "1"
      REQUIRE_YEAR_IF_PRESENT: "0"
      GTMC1_ACTIVATION_THRESHOLD: "0.50"
      ENABLE_MARKET_SNAPSHOT: "1"
      MARKET_SNAPSHOT_MAX_MATCHES: "10"
      LLM_MAX_CONCURRENCY: "4"
      HUMAN_LOG_MODEL_RAW_MAX_CHARS: "5000"
      HUMAN_LOG_RESEARCH_MAX_CHARS: "20000"
      RESEARCH_SNIPPET_MAX_CHARS: "600"

      # CSV output
      FORECASTS_CSV_PATH: forecasts.csv

      # Log GitHub Commit config
      HUMAN_LOG_EXT: md
      DISABLE_GIT_LOGS: false
      COMMIT_LOGS: true
      GIT_LOG_MESSAGE:"chore(logs): append forecasts & run logs"
      GIT_REMOTE_NAME: origin
      GIT_BRANCH_NAME: main

       # ---- Cost table (string JSON) ----
      MODEL_COSTS_JSON: |
        {"openai/gpt-4o":{"prompt":0.0025,"completion":0.01},"anthropic/claude-3.7-sonnet":{"prompt":0.003,"completion":0.015},"gemini-2.5-pro":{"prompt":0.00125,"completion":0.01},"grok-4":{"prompt":0.003,"completion":0.015}}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: pipx install poetry

      - name: Refresh lockfile
        run: poetry lock --no-interaction --no-ansi

      - name: Install deps
        run: poetry install --no-interaction --no-ansi

      - name: Run Forecaster (fresh)
        run: |
          poetry run python run_forecaster.py --mode test_questions --fresh-research --limit 3

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: forecaster-run-${{ github.run_id }}
          path: |
            forecast_logs/**
            forecasts.csv
