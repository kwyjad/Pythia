name: Test Bot (fresh research + fresh GTMC1 actors)

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  forecast_job:
    runs-on: ubuntu-latest

    # Make secrets/flags available to ALL steps (preflight + run + upload)
    env:
      # Required
      METACULUS_TOKEN: ${{ secrets.METACULUS_TOKEN }}

      # GPT-* via OpenRouter (only this leg via OR)
      USE_OPENROUTER: "1"
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      OPENAI_BASE_URL: "https://openrouter.ai/api/v1"
      OPENROUTER_GPT5_ID: "openai/gpt-4o"
      OPENROUTER_GPT5_THINK_ID: "openai/gpt-4o"
      OPENROUTER_FALLBACK_ID: "openai/gpt-4o"

      # Anthropic Claude via OpenRouter
      USE_ANTHROPIC: "1"
      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      ANTHROPIC_BASE_URL: "https://openrouter.ai/api/v1"
      OPENROUTER_CLAUDE37_ID: "anthropic/claude-3.7-sonnet"

      # Google Gemini (direct)
      USE_GOOGLE: "1"
      GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
      GEMINI_MODEL: "gemini-2.5-pro"

      # xAI Grok (direct)
      ENABLE_GROK: "1"
      XAI_API_KEY: ${{ secrets.XAI_API_KEY }}
      XAI_GROK_ID: "grok-4"

      # AskNews (for research)
      enable_asknews: "1"
      ASKNEWS_SECRET: ${{ secrets.ASKNEWS_SECRET }}
      ASKNEWS_CLIENT_ID: ${{ secrets.ASKNEWS_CLIENT_ID }}

      # Market snapshot tuning
      ENABLE_MARKET_SNAPSHOT: "1"
      MARKET_SNAPSHOT_MAX_MATCHES: "3"
      METACULUS_INCLUDE_RESOLVED: "1"

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Purge research + actor caches (test fresh)
        run: |
          rm -f cache/research_llm__*.json || true
          rm -f cache/actors__*.json || true

      - name: "Preflight: verify METACULUS_TOKEN is present and valid"
        shell: bash
        run: |
          if [ -z "${METACULUS_TOKEN:-}" ]; then
            echo "❌ METACULUS_TOKEN is not set in env. Check your workflow env: and repo secrets."
            exit 1
          fi
          code=$(curl -s -o /tmp/me.json -w "%{http_code}" \
            -H "Authorization: Token ${METACULUS_TOKEN}" \
            https://www.metaculus.com/api2/users/me/)
          echo "Metaculus /users/me status: $code"
          if [ "$code" != "200" ]; then
            echo "❌ Metaculus refused the token. Body follows:"
            cat /tmp/me.json
            exit 1
          fi
          echo "✅ Metaculus token OK"

      - name: Run Spagbot test set (fresh)
        run: |
          poetry run python spagbot.py --mode test_questions --fresh-research --limit 3

      - name: Upload Spagbot outputs (logs, CSVs, calibration)
        if: always()  # capture even on failures
        uses: actions/upload-artifact@v4
        with:
          name: spagbot-run-${{ github.run_id }}
          if-no-files-found: warn
          retention-days: 180
          path: |
            forecast_logs/**
            logs/**
            forecasts.csv
            forecasts_by_model.csv
            data/calibration_advice.txt
