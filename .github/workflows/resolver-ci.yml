name: resolver-ci

on:
  schedule:
    - cron: '17 2 * * *'
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  db_backend_nocache:
    name: tests (db backend, cache disabled, duckdb=${{ matrix.duckdb_spec }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        duckdb_spec: ['0_10_x', 'latest']
    env:
      PYTHONDONTWRITEBYTECODE: '1'
      TZ: UTC
      RESOLVER_API_BACKEND: db
      RESOLVER_CACHE: '0'
    steps:
      - uses: actions/checkout@v4

      - name: Prepare workspace cache dir
        run: mkdir -p "${{ github.workspace }}/.ci"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install workspace (editable)
        run: |
          python -m pip install --upgrade pip wheel setuptools
          pip uninstall -y resolver || true
          pip install -e .[db,test]
          if [ "${{ matrix.duckdb_spec }}" = '0_10_x' ]; then
            python -m pip install 'duckdb==0.10.*'
          else
            python -m pip install duckdb
          fi
          python -m pip install pytest

      - name: Run db-backend (cache disabled)
        run: |
          set -o pipefail
          export RESOLVER_DB_URL="duckdb:///${{ github.workspace }}/.ci/db-nocache-${{ matrix.duckdb_spec }}.duckdb"
          export RESOLVER_CACHE=0
          python -m pytest -q resolver/tests \
            --maxfail=1 --disable-warnings --junitxml=pytest-junit.xml 2>&1 | tee pytest-stdout.txt
          exit ${PIPESTATUS[0]}

      - name: Build diagnostics bundle
        if: always()
        run: |
          export RESOLVER_DB_URL="duckdb:///${{ github.workspace }}/.ci/db-nocache-${{ matrix.duckdb_spec }}.duckdb"
          python -m resolver.tools.ci_diag_bundle \
            --suite "db-backend-nocache" \
            --duckdb-version "$(python - <<'PY'
import duckdb
print(getattr(duckdb, '__version__', 'unknown'))
PY
)" \
            --db-url "$RESOLVER_DB_URL" \
            --scan-path "${{ github.workspace }}/.ci" \
            --scan-path "${{ github.workspace }}" \
            --scan-path "/tmp/pytest-of-runner" \
            --scan-path "/tmp" \
            --pytest-stdout pytest-stdout.txt \
            --out "diagnostics.db-nocache-${{ matrix.duckdb_spec }}.zip"

      - name: Upload diagnostics
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: db-backend-nocache-${{ matrix.duckdb_spec }}-${{ github.run_id }}-${{ github.run_attempt }}
          path: diagnostics.db-nocache-${{ matrix.duckdb_spec }}.zip
          overwrite: true
