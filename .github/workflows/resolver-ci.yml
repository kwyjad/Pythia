name: resolver-ci

on:
  schedule:
    - cron: "17 2 * * *"
  workflow_dispatch:

jobs:
  db_backend_nocache:
    name: "tests (db backend, cache disabled, duckdb=${{ matrix.duckdb_spec }})"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        duckdb_spec: [ "0_10_x", "latest" ]
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup Python"
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: "Prepare CI dir"
        run: mkdir -p "${{ github.workspace }}/.ci"

      - name: "Install workspace (db extras)"
        run: |
          python -m pip install --upgrade pip
          pip uninstall -y resolver || true
          if ! pip install -e ".[db,test]"; then
            pip install -e .
            pip install duckdb pytest
          fi

      - name: "Run db-backend (cache disabled)"
        env:
          RESOLVER_DB_URL: "duckdb:///${{ github.workspace }}/.ci/db-nocache-${{ matrix.duckdb_spec }}.duckdb"
          RESOLVER_CACHE: "0"
          RESOLVER_DIAG: "1"
        run: |
          set -o pipefail
          python -m pytest -q resolver/tests --maxfail=1 --disable-warnings --junitxml=pytest-junit.xml 2>&1 | tee pytest-stdout.txt
          EXITCODE=${PIPESTATUS[0]}
          exit $EXITCODE

      - name: "Build diagnostics bundle"
        run: |
          DUCKVER=$(python - <<'PY'
          import duckdb; print(getattr(duckdb,'__version__','unknown'))
          PY
          )
          python -m resolver.tools.ci_diag_bundle \
            --suite db-backend-nocache \
            --duckdb-version "$DUCKVER" \
            --db-url "duckdb:///${{ github.workspace }}/.ci/db-nocache-${{ matrix.duckdb_spec }}.duckdb" \
            --scan-path "${{ github.workspace }}/.ci" \
            --scan-path "${{ github.workspace }}" \
            --scan-path "/tmp/pytest-of-runner" \
            --scan-path "/tmp" \
            --pytest-stdout pytest-stdout.txt \
            --out "diagnostics.db-nocache-${{ matrix.duckdb_spec }}.zip"

      - name: "Upload diagnostics"
        uses: actions/upload-artifact@v4
        with:
          name: "db-backend-nocache-${{ matrix.duckdb_spec }}-${{ github.run_id }}-${{ github.run_attempt }}"
          path: diagnostics.db-nocache-${{ matrix.duckdb_spec }}.zip
          overwrite: true
