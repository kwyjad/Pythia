name: resolver-ci

on:
  push:
    branches:
      - "**"
    paths:
      - "resolver/**"
      - ".github/workflows/**"
      - "!Dashboard/**"
  pull_request:
    paths:
      - "resolver/**"
      - ".github/workflows/**"
      - "!Dashboard/**"

permissions:
  contents: read

jobs:
  offline_connector_smoke:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: |
            resolver/requirements.txt
            resolver/requirements-dev.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r resolver/requirements.txt
          pip install -r resolver/requirements-dev.txt
      - name: Connector Smoke (offline)
        run: |
          pytest -q resolver/tests/test_ingestion_smoke_all_connectors.py
      - name: ReliefWeb PDF Unit Tests (mocked extractors)
        run: |
          pytest -q resolver/tests/ingestion/test_reliefweb_pdf.py
      - name: Docs Link Check (non-blocking)
        continue-on-error: true
        run: |
          python - <<'PY'
          import pathlib
          import re
          import sys

          root = pathlib.Path('.').resolve()
          md_files = [p for p in root.glob('resolver/**/*.md')]
          pattern = re.compile(r'\[[^\]]+\]\(([^)]+)\)')
          broken = []

          for md in md_files:
              text = md.read_text(encoding='utf-8')
              for match in pattern.finditer(text):
                  link = match.group(1)
                  if link.startswith(('http://', 'https://', 'mailto:')):
                      continue
                  if link.startswith('#') or link.startswith('?'):
                      continue
                  target_str = link.split('#', 1)[0]
                  target_path = (md.parent / target_str).resolve()
                  if not target_path.exists():
                      broken.append(f"{md.relative_to(root)} -> {link}")

          if broken:
              print('Broken Markdown links found:')
              for item in broken:
                  print(f" - {item}")
              sys.exit(1)
          else:
              print('No broken intra-repo Markdown links found.')
          PY

  tests-db:
    name: tests (db backend)
    runs-on: ubuntu-latest
    env:
      RESOLVER_API_BACKEND: db
      RESOLVER_DB_URL: duckdb:///${{ github.workspace }}/.ci-resolver.duckdb
      RESOLVER_LOG_LEVEL: DEBUG
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-db-${{ hashFiles('pyproject.toml', 'resolver/requirements.txt', 'resolver/requirements-dev.txt', 'tools/offline_wheels/constraints-db.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-db-

      - name: Install resolver dependencies (db backend)
        run: |
          python -m pip install --upgrade pip
          pip install -r resolver/requirements.txt
          pip install -r resolver/requirements-dev.txt
          pip install -e ".[db,test]"
          python -m pip install pytest

      - name: Show environment
        run: |
          python -V
          python -c "import duckdb,sys;print('duckdb',duckdb.__version__)"
          echo "BACKEND=$RESOLVER_API_BACKEND"
          echo "DB_URL=$RESOLVER_DB_URL"

      - name: Run tests (db)
        run: |
          pytest -q
      - name: Upload DB parity diagnostics
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: db-parity-diagnostics
          path: |
            **/parity_mismatch_expected.csv
            **/parity_mismatch_db.csv
            **/parity_mismatch_cell_diffs.csv
          if-no-files-found: ignore
