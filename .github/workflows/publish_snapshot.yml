---
name: resolver-publish-snapshot

on:
  workflow_dispatch:
    inputs:
      ym:
        description: "Target year-month (YYYY-MM); defaults to current Istanbul time"
        required: false
  schedule:
    # 02:00 Europe/Istanbul is 23:00 UTC on the final day of the previous month
    - cron: '0 23 * * *'

jobs:
  snapshot:
    runs-on: ubuntu-latest
    env:
      PYTHONUNBUFFERED: '1'
      RESOLVER_DB_URL: ${{ secrets.RESOLVER_DB_URL }}
      SNAPSHOT_PUBLISH_TOKEN: ${{ secrets.SNAPSHOT_PUBLISH_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine year-month
        id: ym
        run: |
          if [ -n "${{ github.event.inputs.ym }}" ]; then
            ym="${{ github.event.inputs.ym }}"
          else
            ym="$(TZ=Europe/Istanbul date +%Y-%m)"
          fi
          echo "ym=$ym" >> "$GITHUB_OUTPUT"
          echo "YM=$ym" >> "$GITHUB_ENV"

      - name: Schedule guard
        id: guard
        if: ${{ github.event_name == 'schedule' }}
        run: |
          today="$(TZ=Europe/Istanbul date +%d)"
          if [ "$today" != "01" ]; then
            echo "run=false" >> "$GITHUB_OUTPUT"
          else
            echo "run=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Skip non-first-day runs
        if: ${{ github.event_name == 'schedule' && steps.guard.outputs.run != 'true' }}
        run: echo "Skipping snapshot run because it is not the 1st in Istanbul."

      - name: Set up Python
        if: ${{ github.event_name != 'schedule' || steps.guard.outputs.run == 'true' }}
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: pip
          cache-dependency-path: |
            pyproject.toml
            poetry.lock

      - name: Install dependencies
        if: ${{ github.event_name != 'schedule' || steps.guard.outputs.run == 'true' }}
        run: |
          python -m pip install --upgrade pip wheel setuptools
          pip install -e .[db]

      - name: Apply optional environment overrides
        if: ${{ github.event_name != 'schedule' || steps.guard.outputs.run == 'true' }}
        env:
          RESOLVER_SNAPSHOT_ENV: ${{ secrets.RESOLVER_SNAPSHOT_ENV }}
        run: |
          if [ -n "${RESOLVER_SNAPSHOT_ENV}" ]; then
            echo "Applying RESOLVER_SNAPSHOT_ENV overrides"
            while IFS= read -r line; do
              if [ -n "$line" ]; then
                echo "$line" >> "$GITHUB_ENV"
              fi
            done <<< "${RESOLVER_SNAPSHOT_ENV}"
          fi

      - name: Run monthly snapshot CLI
        if: ${{ github.event_name != 'schedule' || steps.guard.outputs.run == 'true' }}
        run: |
          python -m resolver.cli.snapshot_cli make-monthly --ym "${YM}" --write-db 1

      - name: Verify snapshot manifest
        if: ${{ github.event_name != 'schedule' || steps.guard.outputs.run == 'true' }}
        run: |
          python -m resolver.tools.verify_snapshot_manifest "resolver/snapshots/${YM}/manifest.json"

      - name: Upload snapshot artifact
        if: ${{ github.event_name != 'schedule' || steps.guard.outputs.run == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: resolver-snapshot-${{ env.YM }}
          path: resolver/snapshots/${{ env.YM }}
          if-no-files-found: error

      - name: Commit snapshot back to repository
        if: ${{ (github.event_name != 'schedule' || steps.guard.outputs.run == 'true') && env.SNAPSHOT_PUBLISH_TOKEN != '' }}
        run: |
          git config user.name "Resolver Snapshot Bot"
          git config user.email "snapshots@users.noreply.github.com"
          git add "resolver/snapshots/${YM}"
          if git diff --cached --quiet; then
            echo "No snapshot changes detected; skipping commit."
            exit 0
          fi
          git commit -m "Add resolver snapshot ${YM}"
          git push "https://x-access-token:${SNAPSHOT_PUBLISH_TOKEN}@github.com/${{ github.repository }}.git" HEAD:${{ github.ref_name }}
